version: '3.8'
services:
  db:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=example
    ports:
      - '5432:5432'
    volumes:
      - db:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - backend

  be:
    container_name: be
    build:
      context: ./be
    depends_on:
      db:
        condition: service_started
    ports:
      - '3000:3000'
    links:
      - db
    environment:
      - PGUSER=postgres
      - PGHOST=db
      - PGPASSWORD=example
      - PGDATABASE=postgres
      - PGPORT=5432
      - PORT=3000
      - FEPORT=8080
    networks:
      - backend
      - frontend

  fe:
    container_name: fe
    build:
      context: ./fe
    depends_on:
      be:
        condition: service_started
    ports:
      - '8080:80'
    environment:
      - PORT=8080
    networks:
      - frontend

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge

volumes:
  db:
    driver: local